{"version":3,"file":"_post_.astro.mjs","sources":["../../../../src/components/Headless/Nav/NavTOCButton.tsx","../../../../src/components/Headless/Nav/NavTOCMenuItems.tsx","../../../../src/components/Nav/NavTOC.tsx","../../../../src/utils/ldjson.ts","../../../../src/pages/blog/[post]/index.astro"],"sourcesContent":["// NavButton.tsx\nimport { NavContext } from \"@components/Headless/Nav/NavMenu\";\nimport CloseIcon from \"@icons/close.svg?raw\";\nimport MenuIcon from \"@icons/menu.svg?raw\";\nimport { useContext } from \"react\";\n\ninterface NavMenuButtonProps {\n  className?: string;\n}\n\nexport function NavMenuButton({ className = \"\" }: NavMenuButtonProps) {\n  const context = useContext(NavContext);\n  if (!context) {\n    console.log(\"NavMenuButton: context is undefined\");\n    return null;\n  }\n\n  const { isMenuOpen, toggleMenu } = context;\n\n  const baseStyle =\n    \"flex flex-row space-x-1 px-1 text-sm py-1 text-lg border border-smoke-800 rounded-sm hover:bg-smoke-700\";\n  const openStyle = \"bg-smoke-700\";\n  const closeStyle = \"bg-smoke-950\";\n\n  return (\n    <button\n      onClick={toggleMenu}\n      aria-label=\"Toggle contents menu\"\n      className={\n        className +\n        \" \" +\n        baseStyle +\n        \" \" +\n        (isMenuOpen ? openStyle : closeStyle)\n      }\n    >\n      {isMenuOpen ? (\n        <div\n          className=\"w-5 h-5\"\n          dangerouslySetInnerHTML={{ __html: CloseIcon }}\n        />\n      ) : (\n        <div\n          className=\"w-5 h-5\"\n          dangerouslySetInnerHTML={{ __html: MenuIcon }}\n        />\n      )}\n      <span>Contents</span>\n    </button>\n  );\n}\n\nexport default NavMenuButton;\n","import { NavContext } from \"@components/Headless/Nav/NavMenu\";\nimport { type MenuItem } from \"@components/Headless/Nav/NavMenuItems\";\nimport { type MarkdownHeading } from \"astro\";\nimport { useContext } from \"react\";\n\ntype TOCHeading = {\n  heading: MenuItem;\n  subItems: MenuItem[];\n};\n\nconst TOC = (headings: MarkdownHeading[]) => {\n  const toc: TOCHeading[] = [];\n  headings.forEach((heading) => {\n    if (heading.depth === 2) {\n      toc.push({\n        heading: {\n          text: heading.text,\n          href: heading.slug,\n        },\n        subItems: [],\n      });\n    } else if (heading.depth === 3) {\n      toc[toc.length - 1].subItems.push({\n        text: heading.text,\n        href: heading.slug,\n      });\n    }\n  });\n  return toc;\n};\n\nexport function NavTOCMenuItems({ headings }: { headings: MarkdownHeading[] }) {\n  const context = useContext(NavContext);\n  if (!context) {\n    console.log(\"NavMenuItems: context is undefined\");\n    return null;\n  }\n\n  const { isMenuOpen } = context;\n  return (\n    <ol className={(isMenuOpen ? \"\" : \"hidden\") + \" mt-1\"}>\n      {TOC(headings).map((heading) => {\n        return (\n          <li className=\"my-1\">\n            <a href={`#${heading.heading.href}`} className=\"font-bold\">\n              {heading.heading.text}\n            </a>\n            {heading.subItems.length > 0 && (\n              <ol className=\"ml-2\">\n                {heading.subItems.map((subItem) => {\n                  return (\n                    <li className=\"my-1 text-smoke-300\" key={subItem.href}>\n                      <a href={`#${subItem.href}`}>{subItem.text}</a>\n                    </li>\n                  );\n                })}\n              </ol>\n            )}\n          </li>\n        );\n      })}\n    </ol>\n  );\n}\n","import NavMenu from \"@components/Headless/Nav/NavMenu\";\nimport NavTOCButton from \"@components/Headless/Nav/NavTOCButton\";\nimport { NavTOCMenuItems } from \"@components/Headless/Nav/NavTOCMenuItems\";\nimport type { MarkdownHeading } from \"astro\";\n\nexport default function PostTOCNav({\n  headings,\n}: {\n  headings: MarkdownHeading[];\n}) {\n  return (\n    <NavMenu className=\"flex flex-col text-sm\">\n      <div>\n        <NavTOCButton />\n        <NavTOCMenuItems headings={headings} />\n      </div>\n    </NavMenu>\n  );\n}\n","import techsquidtv from \"@data/techsquidtv.json\";\nimport type { CollectionEntry } from \"astro:content\";\n\nfunction createSchema(data: object) {\n  return {\n    \"@context\": \"https://schema.org\",\n    ...data,\n  };\n}\n\nconst ldAuthor = {\n  \"@type\": \"Person\",\n  name: techsquidtv.name,\n  alternateName: techsquidtv.username,\n  url: techsquidtv.website,\n  sameAs: techsquidtv.socials.map((s) => s.url),\n};\n\nexport function CreateBlog(post: CollectionEntry<\"blog\">) {\n  const ldBlog = {\n    \"@type\": \"BlogPosting\",\n    headline: post.data.title,\n    datePublished: post.data.publishDate.toDateString(),\n    dateModified:\n      post.data.updateDate?.toDateString() ??\n      post.data.publishDate.toDateString(),\n    author: ldAuthor,\n    description: post.data.description,\n    image: post.data.heroImage.src,\n    keywords: post.data.tags,\n  };\n\n  return createSchema(ldBlog);\n}\n","---\nimport NavTOC from \"@components/Nav/NavTOC\";\nimport Newsletter from \"@components/Newsletter.astro\";\nimport PostMeta from \"@components/PostMeta.astro\";\nimport LayoutBase from \"@layouts/LayoutBase.astro\";\nimport * as ldjson from \"@utils/ldjson\";\nimport type { InferGetStaticPropsType } from \"astro\";\nimport { Image } from \"astro:assets\";\nimport { getCollection } from \"astro:content\";\n\nexport async function getStaticPaths() {\n  const posts = await getCollection(\"blog\");\n  return posts.map((post) => {\n    return {\n      params: {\n        post: post.slug,\n      },\n      props: post,\n    };\n  });\n}\n\ntype Props = InferGetStaticPropsType<typeof getStaticPaths>;\nconst post = Astro.props;\nconst { Content, headings } = await post.render();\n---\n\n<LayoutBase\n  ogImage={`blog/${post.slug}/${post.slug}-og.png`}\n  description={post.data.description}\n  title={post.data.title}\n>\n  <main class=\"\">\n    <div class=\"relative w-full h-96 overflow-hidden\">\n      <Image\n        src={post.data.heroImage}\n        alt={post.data.heroImageAlt}\n        class=\"w-full h-full object-cover\"\n        transition:name={`heroImage ${post.id}`}\n      />\n    </div>\n    <article class=\"relative wrapper z-10 -mt-28 animate-slideUp\">\n      <div class=\"mx-auto card w-full max-w-screen-lg\">\n        <div class=\"md:px-8\">\n          <h1 class=\"font-extrabold text-gray-100 my-6 text-4xl md:text-4xl xl:text-5xl\">\n            {post.data.title}\n          </h1>\n          <div class=\"my-2\">\n            <PostMeta post={post} />\n          </div>\n          <div class=\"rounded p-2 bg-smoke-950\">\n            <NavTOC headings={headings} client:load />\n          </div>\n        </div>\n        <div class=\"md-content md:px-8\">\n          <Content />\n        </div>\n      </div>\n    </article>\n    <div class=\"wrapper w-full my-3\">\n      <div class=\"max-w-screen-lg w-full mx-auto\"><Newsletter /></div>\n    </div>\n  </main>\n</LayoutBase>\n\n<script\n  type=\"application/ld+json\"\n  set:html={JSON.stringify(ldjson.CreateBlog(post))}\n/>\n\n<style is:global>\n  .md-content h2,\n  .md-content h3,\n  .md-content h4,\n  .md-content h5,\n  .md-content h6 {\n    margin-bottom: 1rem; /* mb-4 */\n    margin-top: 1.5rem; /* mt-6 */\n    font-weight: 700; /* font-bold */\n    color: rgb(243 244 246); /* text-gray-100 */\n  }\n\n  .md-content h2 { font-size: 1.875rem; line-height: 2.25rem; } /* text-3xl */\n  .md-content h3 { font-size: 1.5rem; line-height: 2rem; }   /* text-2xl */\n  .md-content h4 { font-size: 1.25rem; line-height: 1.75rem; } /* text-xl */\n\n  .md-content blockquote {\n    margin-top: 1rem; margin-bottom: 1rem; /* my-4 */\n    border-left: 4px solid rgb(156 163 175); /* border-gray-400 */\n    padding-left: 1rem; /* pl-4 */\n    font-style: italic; /* italic */\n  }\n\n  .md-content ul, .md-content ol { margin-top: 1rem; margin-bottom: 1rem; }\n  .md-content ul { list-style-type: disc; list-style-position: inside; }\n  .md-content ol { list-style-type: decimal; list-style-position: inside; }\n\n  .md-content img { border-radius: 0.5rem; margin-left: auto; margin-right: auto; }\n\n  .md-content p>code {\n    border-radius: 0.125rem; /* rounded-sm */\n    background-color: rgb(20 20 21); /* bg-smoke-950 */\n    border: 1px solid rgb(167 243 208); /* border-emerald-200 */\n    color: rgb(167 243 208); /* text-emerald-200 */\n    padding: 0.125rem 0.25rem; /* px-1 py-0.5 */\n    font-size: 0.875rem; /* text-sm */\n  }\n\n  .md-content ul ul,\n  .md-content ol ol,\n  .md-content ul ol,\n  .md-content ol ul  {\n    margin: 0; margin-left: 1.5rem; /* m-0 ml-6 */\n  }\n\n  lite-youtube { margin-left: auto; margin-right: auto; }\n</style>\n"],"names":["NavTOCButton","$$createAstro","$$createComponent","Astro","$$render","$$renderComponent","LayoutBase","$$result","$$maybeRenderHead","Image","$$renderTransition","PostMeta","NavTOC","Newsletter","$$unescapeHTML","ldjson.CreateBlog"],"mappings":"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"}