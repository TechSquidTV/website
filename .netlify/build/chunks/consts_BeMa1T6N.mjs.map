{"version":3,"file":"consts_BeMa1T6N.mjs","sources":["../../../node_modules/.pnpm/@astrojs+internal-helpers@0.7.1/node_modules/@astrojs/internal-helpers/dist/path.js","../../../node_modules/.pnpm/astro@5.12.9_@netlify+blobs@10.0.8_@types+node@24.2.1_jiti@2.5.1_lightningcss@1.30.1_ro_8bea888d461345c2cbc79369019d6bab/node_modules/astro/dist/assets/consts.js"],"sourcesContent":["function appendExtension(path, extension) {\n  return path + \".\" + extension;\n}\nfunction appendForwardSlash(path) {\n  return path.endsWith(\"/\") ? path : path + \"/\";\n}\nfunction prependForwardSlash(path) {\n  return path[0] === \"/\" ? path : \"/\" + path;\n}\nfunction collapseDuplicateSlashes(path) {\n  return path.replace(/(?<!:)\\/{2,}/g, \"/\");\n}\nconst MANY_TRAILING_SLASHES = /\\/{2,}$/g;\nfunction collapseDuplicateTrailingSlashes(path, trailingSlash) {\n  if (!path) {\n    return path;\n  }\n  return path.replace(MANY_TRAILING_SLASHES, trailingSlash ? \"/\" : \"\") || \"/\";\n}\nfunction removeTrailingForwardSlash(path) {\n  return path.endsWith(\"/\") ? path.slice(0, path.length - 1) : path;\n}\nfunction removeLeadingForwardSlash(path) {\n  return path.startsWith(\"/\") ? path.substring(1) : path;\n}\nfunction removeLeadingForwardSlashWindows(path) {\n  return path.startsWith(\"/\") && path[2] === \":\" ? path.substring(1) : path;\n}\nfunction trimSlashes(path) {\n  return path.replace(/^\\/|\\/$/g, \"\");\n}\nfunction startsWithForwardSlash(path) {\n  return path[0] === \"/\";\n}\nfunction startsWithDotDotSlash(path) {\n  const c1 = path[0];\n  const c2 = path[1];\n  const c3 = path[2];\n  return c1 === \".\" && c2 === \".\" && c3 === \"/\";\n}\nfunction startsWithDotSlash(path) {\n  const c1 = path[0];\n  const c2 = path[1];\n  return c1 === \".\" && c2 === \"/\";\n}\nfunction isRelativePath(path) {\n  return startsWithDotDotSlash(path) || startsWithDotSlash(path);\n}\nfunction isString(path) {\n  return typeof path === \"string\" || path instanceof String;\n}\nconst INTERNAL_PREFIXES = /* @__PURE__ */ new Set([\"/_\", \"/@\", \"/.\", \"//\"]);\nconst JUST_SLASHES = /^\\/{2,}$/;\nfunction isInternalPath(path) {\n  return INTERNAL_PREFIXES.has(path.slice(0, 2)) && !JUST_SLASHES.test(path);\n}\nfunction joinPaths(...paths) {\n  return paths.filter(isString).map((path, i) => {\n    if (i === 0) {\n      return removeTrailingForwardSlash(path);\n    } else if (i === paths.length - 1) {\n      return removeLeadingForwardSlash(path);\n    } else {\n      return trimSlashes(path);\n    }\n  }).join(\"/\");\n}\nfunction removeFileExtension(path) {\n  let idx = path.lastIndexOf(\".\");\n  return idx === -1 ? path : path.slice(0, idx);\n}\nfunction removeQueryString(path) {\n  const index = path.lastIndexOf(\"?\");\n  return index > 0 ? path.substring(0, index) : path;\n}\nfunction isRemotePath(src) {\n  return /^(?:http|ftp|https|ws):?\\/\\//.test(src) || src.startsWith(\"data:\");\n}\nfunction slash(path) {\n  return path.replace(/\\\\/g, \"/\");\n}\nfunction fileExtension(path) {\n  const ext = path.split(\".\").pop();\n  return ext !== path ? `.${ext}` : \"\";\n}\nfunction removeBase(path, base) {\n  if (path.startsWith(base)) {\n    return path.slice(removeTrailingForwardSlash(base).length);\n  }\n  return path;\n}\nconst WITH_FILE_EXT = /\\/[^/]+\\.\\w+$/;\nfunction hasFileExtension(path) {\n  return WITH_FILE_EXT.test(path);\n}\nexport {\n  MANY_TRAILING_SLASHES,\n  appendExtension,\n  appendForwardSlash,\n  collapseDuplicateSlashes,\n  collapseDuplicateTrailingSlashes,\n  fileExtension,\n  hasFileExtension,\n  isInternalPath,\n  isRelativePath,\n  isRemotePath,\n  joinPaths,\n  prependForwardSlash,\n  removeBase,\n  removeFileExtension,\n  removeLeadingForwardSlash,\n  removeLeadingForwardSlashWindows,\n  removeQueryString,\n  removeTrailingForwardSlash,\n  slash,\n  startsWithDotDotSlash,\n  startsWithDotSlash,\n  startsWithForwardSlash,\n  trimSlashes\n};\n","const VIRTUAL_MODULE_ID = \"astro:assets\";\nconst VIRTUAL_SERVICE_ID = \"virtual:image-service\";\nconst VALID_INPUT_FORMATS = [\n  \"jpeg\",\n  \"jpg\",\n  \"png\",\n  \"tiff\",\n  \"webp\",\n  \"gif\",\n  \"svg\",\n  \"avif\"\n];\nconst VALID_SUPPORTED_FORMATS = [\n  \"jpeg\",\n  \"jpg\",\n  \"png\",\n  \"tiff\",\n  \"webp\",\n  \"gif\",\n  \"svg\",\n  \"avif\"\n];\nconst DEFAULT_OUTPUT_FORMAT = \"webp\";\nconst VALID_OUTPUT_FORMATS = [\"avif\", \"png\", \"webp\", \"jpeg\", \"jpg\", \"svg\"];\nconst DEFAULT_HASH_PROPS = [\n  \"src\",\n  \"width\",\n  \"height\",\n  \"format\",\n  \"quality\",\n  \"fit\",\n  \"position\"\n];\nexport {\n  DEFAULT_HASH_PROPS,\n  DEFAULT_OUTPUT_FORMAT,\n  VALID_INPUT_FORMATS,\n  VALID_OUTPUT_FORMATS,\n  VALID_SUPPORTED_FORMATS,\n  VIRTUAL_MODULE_ID,\n  VIRTUAL_SERVICE_ID\n};\n"],"names":[],"mappings":"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","x_google_ignoreList":[0,1]}