---
import PostMeta from "@components/PostMeta.astro";
import { type ValidTags } from '@utils/blogTag'
import { Image } from "astro:assets";
import { getCollection } from "astro:content";

type Props = {
  tag?: ValidTags
}
const { tag } = Astro.props

// Retrieve blog posts and sort by publish date
const blogPosts = await getCollection("blog");
blogPosts.sort((a, b) => {
  return new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime();
});

// Hold filtered blog posts
let blogPostResults: typeof blogPosts = blogPosts;

// Filter blog posts by tag
if (tag) {
  blogPostResults = blogPosts.filter((post) => {
    return post.data.tags.includes(tag);
  });
}

---

<ul class="flex flex-col space-y-3">
      {
        blogPosts.map((post) => {
          return (
            <li class="card w-full">
              <a href={new URL(`/blog/${post.slug}`, Astro.site).href}>
                <article class="flex flex-col md:flex-row">
                  <div class="md:w-80 md:h-full mb-2 md:mb-0">
                    <Image
                      src={post.data.heroImage}
                      alt={post.data.heroImageAlt || post.data.title}
                      class="rounded-lg object-cover object-center w-full h-full shadow-lg"
                      transition:name={`heroImage ${post.id}`}
                    />
                  </div>
                  <div class="flex md:flex-1 flex-col py-2 mx-8">
                    <h2 class="text-4xl font-bold text-smoke-50 mb-2 break-words">
                      {post.data.title}
                    </h2>
                    <p class="flex-1">{post.data.description}</p>
                    <PostMeta post={post} />
                  </div>
                </article>
              </a>
            </li>
          );
        })
      }
    </ul>