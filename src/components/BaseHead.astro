---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import "../styles/global.css";
import type { ImageMetadata } from "astro";
import { SITE_TITLE, PERSONAL_INFO, SOCIAL_LINKS } from "../consts";

interface Props {
  title: string;
  description: string;
  image?: ImageMetadata;
  ogImage?: string;
  type?: "website" | "article";
  publishDate?: Date;
  tags?: string[];
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const {
  title,
  description,
  image,
  ogImage,
  type = "website",
  publishDate,
  tags,
} = Astro.props;

// Generate OG image URL
let ogImageUrl: string;

if (image) {
  // Use the provided ImageMetadata (e.g., hero image for blog posts)
  ogImageUrl = new URL(image.src, Astro.site).href;
} else if (ogImage) {
  // Use the provided string URL
  ogImageUrl = ogImage;
} else {
  // Generate default OG image URL based on pathname
  const pathname = Astro.url.pathname;
  // Handle root path and clean up trailing slashes
  const cleanPath = pathname === "/" ? "/index" : pathname.replace(/\/$/, "");
  ogImageUrl = new URL(`/open-graph${cleanPath}.png`, Astro.site).href;
}

// Get social profile URLs for verification
const twitterProfile = SOCIAL_LINKS.find(
  (link) => link.name === "Twitter",
)?.url;
const linkedinProfile = SOCIAL_LINKS.find(
  (link) => link.name === "LinkedIn",
)?.url;
const githubProfile = SOCIAL_LINKS.find((link) => link.name === "GitHub")?.url;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link
  rel="alternate"
  type="application/rss+xml"
  title={SITE_TITLE}
  href={new URL("rss.xml", Astro.site)}
/>
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<link
  rel="preload"
  href="/fonts/atkinson-regular.woff"
  as="font"
  type="font/woff"
  crossorigin
/>
<link
  rel="preload"
  href="/fonts/atkinson-bold.woff"
  as="font"
  type="font/woff"
  crossorigin
/>

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Author and Social Verification -->
<meta name="author" content={PERSONAL_INFO.name} />
<meta name="creator" content={PERSONAL_INFO.name} />
<link rel="author" href={`${Astro.site}about`} />
{twitterProfile && <link rel="me" href={twitterProfile} />}
{linkedinProfile && <link rel="me" href={linkedinProfile} />}
{githubProfile && <link rel="me" href={githubProfile} />}

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={ogImageUrl} />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="630" />
<meta property="og:site_name" content={SITE_TITLE} />
{
  type === "article" && publishDate && (
    <meta
      property="article:published_time"
      content={publishDate.toISOString()}
    />
  )
}
{
  type === "article" && (
    <meta property="article:author" content={PERSONAL_INFO.name} />
  )
}
{
  type === "article" &&
    tags &&
    tags.map((tag) => <meta property="article:tag" content={tag} />)
}

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={ogImageUrl} />
<meta name="twitter:creator" content="@techsquidtv" />
<meta name="twitter:site" content="@techsquidtv" />
