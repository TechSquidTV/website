---
import type { HTMLAttributes } from "astro/types";

type Props = HTMLAttributes<"a">;

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, "");
const subpath = pathname.match(/[^\/]+/g);
const isActive =
  href === pathname ||
  href === "/" + (subpath?.[0] || "") ||
  (href === "/blog" && pathname.startsWith("/blog"));
---

<a
  href={href}
  class:list={[className, { active: isActive }, "nav-link"]}
  {...props}
>
  <slot />
</a>
<style>
  .nav-link {
    display: inline-block;
    padding: 0.75rem 1rem;
    color: var(--color-text-secondary);
    text-decoration: none;
    border-radius: 0.5rem;
    font-weight: 500;
    font-size: 0.95rem;
    transition: all 0.2s ease;
    position: relative;
    overflow: hidden;
  }

  .nav-link::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      135deg,
      transparent,
      var(--color-accent-purple) / 10,
      transparent
    );
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
  }

  .nav-link:hover {
    color: var(--color-accent);
    background-color: var(--color-bg-tertiary);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgb(var(--color-accent) / 0.15);
  }

  .nav-link:hover::before {
    opacity: 1;
  }

  .nav-link.active {
    color: var(--color-accent);
    background-color: var(--color-bg-tertiary);
    font-weight: 600;
    box-shadow:
      inset 0 1px 0 rgb(255 255 255 / 0.1),
      0 2px 8px rgb(var(--color-accent) / 0.25),
      0 0 0 1px var(--color-accent) / 20;
  }

  .nav-link.active::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 24px;
    height: 2px;
    background: linear-gradient(
      90deg,
      transparent,
      var(--color-accent),
      transparent
    );
    border-radius: 1px;
  }

  /* Subtle glow effect for active state */
  .nav-link.active::before {
    opacity: 0.3;
    background: radial-gradient(
      circle at center,
      var(--color-accent) / 20,
      transparent
    );
  }
</style>
