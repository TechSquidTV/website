---
import { Icon } from "astro-icon/components";

interface Props {
  name: string;
  url: string;
  icon: string;
  description?: string;
  external?: boolean;
  variant?: "card" | "icon" | "compact";
  size?: "sm" | "md" | "lg";
  className?: string;
}

const {
  name,
  url,
  icon,
  description,
  external = true,
  variant = "card",
  size = "md",
  className = "",
} = Astro.props;

const iconSizes = {
  sm: 16,
  md: 20,
  lg: 24,
};

const cardClasses =
  "flex items-center gap-4 p-4 bg-bg-tertiary border border-border rounded-xl text-text-primary no-underline transition-all duration-300 hover:bg-bg-code hover:border-accent hover:-translate-y-1 hover:shadow-card";
const iconClasses =
  "flex items-center justify-center w-12 h-12 bg-bg-secondary border border-border rounded-full text-text-muted transition-all duration-300 hover:text-accent hover:border-accent hover:-translate-y-1 hover:scale-105 hover:shadow-glow";
const compactClasses =
  "inline-flex items-center gap-2 text-accent hover:text-accent-dark transition-colors duration-200 no-underline";

const variantClasses = {
  card: cardClasses,
  icon: iconClasses,
  compact: compactClasses,
};
---

<a
  href={url}
  class={`${variantClasses[variant]} ${className}`}
  target={external ? "_blank" : "_self"}
  rel={external ? "noopener noreferrer" : undefined}
>
  <Icon
    name={icon}
    size={iconSizes[size]}
    class={variant === "card" ? "text-accent flex-shrink-0" : ""}
  />
  {
    variant === "card" && (
      <div class="flex-1">
        <h3 class="text-text-primary mb-1 text-lg font-semibold">{name}</h3>
        {description && (
          <p class="text-text-muted m-0 text-sm">{description}</p>
        )}
      </div>
    )
  }
  {variant === "compact" && <span>{name}</span>}
</a>
