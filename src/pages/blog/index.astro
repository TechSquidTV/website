---
import { Image } from "astro:assets";
import { getCollection, render } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import FormattedDate from "../../components/FormattedDate.astro";
import ReadingTimeDisplay from "../../components/ReadingTimeDisplay.astro";
import { SITE_DESCRIPTION, SITE_TITLE } from "../../consts";

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf(),
);

// Get reading time data for all posts
const postsWithReadingTime = await Promise.all(
  posts.map(async (post) => {
    const { remarkPluginFrontmatter } = await render(post);
    return { ...post, readingTime: remarkPluginFrontmatter };
  }),
);
---

<BaseLayout title={SITE_TITLE} description={SITE_DESCRIPTION} maxWidth="xl">
  <section class="p-8 sm:p-4 md:p-6">
    <ul
      class="m-0 grid list-none grid-cols-1 gap-8 p-0 sm:gap-4 md:grid-cols-2 md:gap-6"
    >
      {
        postsWithReadingTime.map((post, index) => (
          <li class={`flex flex-col ${index === 0 ? "md:col-span-2" : ""} `}>
            <a
              href={`/blog/${post.data.slug || post.id}/`}
              class={`bg-bg-tertiary border-border hover:border-accent hover:shadow-glow group flex h-full flex-col rounded-2xl border p-4 no-underline transition-all duration-300 hover:-translate-y-1 ${index === 0 ? "from-bg-tertiary to-bg-secondary border-border-light bg-gradient-to-br text-center" : ""} `}
            >
              {post.data.heroImage && (
                <Image
                  width={720}
                  height={360}
                  src={post.data.heroImage}
                  alt=""
                  class={`border-border group-hover:border-accent group-hover:shadow-card mb-2 w-full rounded-xl border object-cover transition-all duration-300 ${index === 0 ? "max-h-96" : "h-48 sm:h-40 md:h-44"} `}
                  transition:name={`hero-${post.data.slug || post.id}`}
                />
              )}
              <h4
                class={`text-text-primary group-hover:text-accent !mb-2 flex-grow leading-tight font-semibold transition-colors duration-300 ${index === 0 ? "text-lg md:!my-10 md:!text-4xl lg:!my-12 lg:!text-5xl" : "text-lg"} `}
              >
                {post.data.title}
              </h4>
              <div class="mt-auto flex flex-row items-center justify-between gap-2">
                <span class="text-text-muted group-hover:text-accent text-sm transition-colors duration-300">
                  <FormattedDate date={post.data.publishDate} />
                </span>
                <ReadingTimeDisplay
                  minutesRead={post.readingTime?.minutesRead}
                  className="text-xs"
                />
              </div>
            </a>
          </li>
        ))
      }
    </ul>
  </section>
</BaseLayout>
