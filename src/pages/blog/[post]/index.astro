---
import NavTOC from "@components/Nav/NavTOC";
import Newsletter from "@components/Newsletter.astro";
import PostMeta from "@components/PostMeta.astro";
import LayoutBase from "@layouts/LayoutBase.astro";
import * as ldjson from "@utils/ldjson";
import type { InferGetStaticPropsType } from "astro";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => {
    return {
      params: {
        post: post.slug,
      },
      props: post,
    };
  });
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const post = Astro.props;
const { Content, headings } = await post.render();
---

<LayoutBase
  ogImage={`blog/${post.slug}/${post.slug}-og.png`}
  description={post.data.description}
  title={post.data.title}
>
  <main class="">
    <div class="relative w-full h-96 overflow-hidden">
      <Image
        src={post.data.heroImage}
        alt={post.data.heroImageAlt}
        class="w-full h-full object-cover"
        transition:name={`heroImage ${post.id}`}
      />
    </div>
    <article class="relative wrapper z-10 -mt-28 animate-slideUp">
      <div class="mx-auto card w-full max-w-screen-lg">
        <div class="md:px-8">
          <h1 class="font-extrabold text-gray-100 my-6 text-4xl md:text-4xl xl:text-5xl">
            {post.data.title}
          </h1>
          <div class="my-2">
            <PostMeta post={post} />
          </div>
          <div class="rounded p-2 bg-smoke-950">
            <NavTOC headings={headings} client:load />
          </div>
        </div>
        <div class="md-content md:px-8">
          <Content />
        </div>
      </div>
    </article>
    <div class="wrapper w-full my-3">
      <div class="max-w-screen-lg w-full mx-auto"><Newsletter /></div>
    </div>
  </main>
</LayoutBase>

<script
  type="application/ld+json"
  set:html={JSON.stringify(ldjson.CreateBlog(post))}
/>

<style is:global>
  .md-content h2,
  .md-content h3,
  .md-content h4,
  .md-content h5,
  .md-content h6 {
    margin-bottom: 1rem; /* mb-4 */
    margin-top: 1.5rem; /* mt-6 */
    font-weight: 700; /* font-bold */
    color: rgb(243 244 246); /* text-gray-100 */
  }

  .md-content h2 { font-size: 1.875rem; line-height: 2.25rem; } /* text-3xl */
  .md-content h3 { font-size: 1.5rem; line-height: 2rem; }   /* text-2xl */
  .md-content h4 { font-size: 1.25rem; line-height: 1.75rem; } /* text-xl */

  .md-content blockquote {
    margin-top: 1rem; margin-bottom: 1rem; /* my-4 */
    border-left: 4px solid rgb(156 163 175); /* border-gray-400 */
    padding-left: 1rem; /* pl-4 */
    font-style: italic; /* italic */
  }

  .md-content ul, .md-content ol { margin-top: 1rem; margin-bottom: 1rem; }
  .md-content ul { list-style-type: disc; list-style-position: inside; }
  .md-content ol { list-style-type: decimal; list-style-position: inside; }

  .md-content img { border-radius: 0.5rem; margin-left: auto; margin-right: auto; }

  .md-content p>code {
    border-radius: 0.125rem; /* rounded-sm */
    background-color: rgb(20 20 21); /* bg-smoke-950 */
    border: 1px solid rgb(167 243 208); /* border-emerald-200 */
    color: rgb(167 243 208); /* text-emerald-200 */
    padding: 0.125rem 0.25rem; /* px-1 py-0.5 */
    font-size: 0.875rem; /* text-sm */
  }

  .md-content ul ul,
  .md-content ol ol,
  .md-content ul ol,
  .md-content ol ul  {
    margin: 0; margin-left: 1.5rem; /* m-0 ml-6 */
  }

  lite-youtube { margin-left: auto; margin-right: auto; }
</style>
